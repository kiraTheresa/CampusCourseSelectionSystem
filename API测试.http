### 校园选课管理系统 API 测试
### HTTP文件格式，支持在IntelliJ IDEA或VSCode REST Client中直接运行

// ============= 课程管理API测试 =============

### 1.1 查询所有课程
GET http://localhost:8080/api/courses
Accept: application/json

// 预期结果：200 OK，返回课程列表

### 1.2 创建课程 - 成功
POST http://localhost:8080/api/courses
Content-Type: application/json

{
  "code": "ENG101",
  "title": "英语写作基础",
  "instructorId": "ins003",
  "scheduleId": "sched003",
  "capacity": 80
}

// 预期结果：201 Created，返回创建的课程信息

### 1.2 创建课程 - 缺少必要字段
POST http://localhost:8080/api/courses
Content-Type: application/json

{
  "code": "PHY101",
  "title": "大学物理"
  // 缺少 instructorId, scheduleId, capacity
}

// 预期结果：400 Bad Request，返回验证错误

### 1.3 根据ID查询单个课程
GET http://localhost:8080/api/courses/550e8400-e29b-41d4-a716-446655440000
Accept: application/json

// 预期结果：200 OK，返回课程信息

### 1.4 更新课程
PUT http://localhost:8080/api/courses/550e8400-e29b-41d4-a716-446655440000
Content-Type: application/json

{
  "title": "计算机科学导论（更新版）",
  "capacity": 70
}

// 预期结果：200 OK，返回更新后的课程信息

### 1.5 删除课程
DELETE http://localhost:8080/api/courses/550e8400-e29b-41d4-a716-446655440002
Accept: application/json

// 预期结果：200 OK，返回删除成功消息

// ============= 学生管理API测试 =============

### 2.1 查询所有学生
GET http://localhost:8080/api/students
Accept: application/json

// 预期结果：200 OK，返回学生列表

### 2.2 创建学生 - 成功
POST http://localhost:8080/api/students
Content-Type: application/json

{
  "studentId": "2024003",
  "name": "王五",
  "major": "英语",
  "grade": 2024,
  "email": "wangwu@example.com"
}

// 预期结果：201 Created，返回创建的学生信息

### 2.3 根据ID查询单个学生
GET http://localhost:8080/api/students/660e8400-e29b-41d4-a716-446655440000
Accept: application/json

// 预期结果：200 OK，返回学生信息

### 2.4 更新学生信息
PUT http://localhost:8080/api/students/660e8400-e29b-41d4-a716-446655440001
Content-Type: application/json

{
  "name": "李四（已更新）",
  "email": "lisi_updated@example.com"
}

// 预期结果：200 OK，返回更新后的学生信息

### 2.5 检查学号是否存在
GET http://localhost:8080/api/students/check-student-id/2024001
Accept: application/json

// 预期结果：200 OK，返回学号存在状态

// ============= 选课管理API测试 =============

### 3.1 学生选课 - 成功
POST http://localhost:8080/api/enrollments
Content-Type: application/json

{
  "courseId": "550e8400-e29b-41d4-a716-446655440000",
  "studentId": "660e8400-e29b-41d4-a716-446655440000"
}

// 预期结果：201 Created，返回选课成功信息

### 3.2 根据学生查询选课记录
GET http://localhost:8080/api/enrollments/student/660e8400-e29b-41d4-a716-446655440000
Accept: application/json

// 预期结果：200 OK，返回选课记录列表

### 3.3 更新选课状态
PUT http://localhost:8080/api/enrollments/770e8400-e29b-41d4-a716-446655440000/status
Content-Type: application/json

{
  "status": "COMPLETED"
}

// 预期结果：200 OK，返回状态更新成功信息

### 3.4 更新成绩
PUT http://localhost:8080/api/enrollments/770e8400-e29b-41d4-a716-446655440000/grade
Content-Type: application/json

{
  "grade": 85.5
}

// 预期结果：200 OK，返回成绩更新成功信息

### 3.5 根据ID退课
DELETE http://localhost:8080/api/enrollments/770e8400-e29b-41d4-a716-446655440000
Accept: application/json

// 预期结果：200 OK，返回退课成功信息

### 3.6 根据课程和学生退课
DELETE http://localhost:8080/api/enrollments/course/550e8400-e29b-41d4-a716-446655440000/student/660e8400-e29b-41d4-a716-446655440000
Accept: application/json

// 预期结果：200 OK，返回退课成功信息